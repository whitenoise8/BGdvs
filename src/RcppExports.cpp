// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// invtridiag
arma::mat invtridiag(arma::mat A);
RcppExport SEXP _BGdvs_invtridiag(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(invtridiag(A));
    return rcpp_result_gen;
END_RCPP
}
// invtridiag_memo
arma::mat invtridiag_memo(arma::vec dvec, double od, int n);
RcppExport SEXP _BGdvs_invtridiag_memo(SEXP dvecSEXP, SEXP odSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type dvec(dvecSEXP);
    Rcpp::traits::input_parameter< double >::type od(odSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(invtridiag_memo(dvec, od, n));
    return rcpp_result_gen;
END_RCPP
}
// getQuantitiesCpp
Rcpp::List getQuantitiesCpp(arma::cube A, arma::mat B, double nb, double bl);
RcppExport SEXP _BGdvs_getQuantitiesCpp(SEXP ASEXP, SEXP BSEXP, SEXP nbSEXP, SEXP blSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type nb(nbSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    rcpp_result_gen = Rcpp::wrap(getQuantitiesCpp(A, B, nb, bl));
    return rcpp_result_gen;
END_RCPP
}
// getXX
Rcpp::List getXX(arma::mat mu_q_gamma, arma::mat X, arma::vec mu_q_s2inv);
RcppExport SEXP _BGdvs_getXX(SEXP mu_q_gammaSEXP, SEXP XSEXP, SEXP mu_q_s2invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu_q_gamma(mu_q_gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu_q_s2inv(mu_q_s2invSEXP);
    rcpp_result_gen = Rcpp::wrap(getXX(mu_q_gamma, X, mu_q_s2inv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BGdvs_invtridiag", (DL_FUNC) &_BGdvs_invtridiag, 1},
    {"_BGdvs_invtridiag_memo", (DL_FUNC) &_BGdvs_invtridiag_memo, 3},
    {"_BGdvs_getQuantitiesCpp", (DL_FUNC) &_BGdvs_getQuantitiesCpp, 4},
    {"_BGdvs_getXX", (DL_FUNC) &_BGdvs_getXX, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_BGdvs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
